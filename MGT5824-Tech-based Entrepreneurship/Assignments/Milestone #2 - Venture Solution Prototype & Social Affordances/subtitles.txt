Hi everyone  this is Gasser Ahmed.  Welcome to this presentation  where Iâ€™m going to talk about  the venture solution prototype & social affordances  for the Lawn Buddy app

First, let's dive into the wireframe and explore the main features of Lawn Buddy.  We'll start with the landing page where we welcome users and allow  existing users to sign in into their accounts using email and password or new users to sign up for a new account using their full name, email, password

Once logged in, users are taken to their dashboard. This central hub provides an overview of upcoming mowing sessions and weather updates. It's designed to keep users informed and in control of their lawn maintenance. To help users take their first step, we have a prominent "Get Started" button on the dashboard. By clicking it, users will navigate to  the lawn scanning instructions which provides a clear step-by-step guidance on capturing their lawn using the app  to ensure accurate lawn analysis

Next, we have the  lawn scan page. Using the device's camera, users can scan their lawn, following the instructions provided. It's an interactive and user-friendly experience, empowering users to take control of their lawn care journey.  After the scan, our advanced AI algorithms work their magic. On the  lawn info page, users are presented with comprehensive insights and analysis of their lawn. Our AI system evaluates the lawn's condition and identifies areas of concern  Next, we leverage the power of Machine Learning to  suggest trusted lawn care professionals in their area. The suggested lawn care professional page utilizes intelligent algorithms to detect available professionals based on proximity and user preferences

Next, we have the  lawn scan page. Using the device's camera, users can scan their lawn, following the instructions provided. It's an interactive and user-friendly experience, empowering users to take control of their lawn care journey.  After the scan, our advanced AI algorithms work their magic. On the  lawn info page, users are presented with comprehensive insights and analysis of their lawn. Our AI system evaluates the lawn's condition and identifies areas of concern  Next, we leverage the power of Machine Learning to  suggest trusted lawn care professionals in their area. The suggested lawn care professional page utilizes intelligent algorithms to detect available professionals based on proximity and user preferences

For the app flow diagram  The app begins with a landing page, followed by seamless sign-in and sign-up pages. Once signed in, users are directed to their dashboard with a prominent "Get Started" button. Users can then follow the lawn scanning instructions to capture their lawn using the app's camera feature. The captured data is analyzed, and the AI results page provides users with insights and recommendations for their lawn care. The app then suggests trusted lawn care professionals through the dedicated page. Then the checkout page allows users to schedule and pay for the service, and the confirmation page provides assurance 

Lawn Buddy leverages a comprehensive dataset to ensure accurate image recognition for efficient lawn care services.  By analyzing the pixels in the images, Lawn Buddy employs computer vision techniques such as classification, localization, and tagging. It accurately detects the lawn, determines its size through localization, and evaluates lawn quality based on color and blade length. With the help of phone's AR feature, it measures the lawn size and considers the topography to identify non-flat terrain. Additionally, Lawn Buddy  utilizes location services to incorporate weather patterns, such as rain and drought, into grass growth predictions, enabling optimal scheduling for lawn maintenance.

Lawn Buddy empowers  differently abled individuals to care for their lawns with ease. By using the app's object recognition technology, users can scan their lawn from their window, allowing Lawn Buddy to detect lawn size, terrain, quality, and blade length. With this information, Lawn Buddy automatically generates a maintenance schedule and suggests a range of lawn professionals and their prices. Users can confirm the details and have their lawn cared for by Lawn Buddy for their desired duration, with the ability to schedule maintenance up to a year in advance.  On the scheduled day, the lawn professional arrives, provides the necessary services, and receives payment and tip through the app, ensuring a contactless experience.  The image recognition technology enhances the checkout process, benefiting sick, elderly, or differently abled individuals who can enjoy a well-maintained lawn hassle-free.

Lawn Buddy prioritizes user experience with its user-friendly interface and intuitive interactions.  Users can effortlessly schedule mowing sessions, customize their lawn care preferences, and stay updated on upcoming appointments.  Clear instructions and guidance also streamline the scheduling process, minimizing user effort. In addition,  Accessibility features, including adjustable font sizes, color contrast options, and voice-guided navigation, ensure inclusivity for users with diverse needs. Lastly,  with push notifications and reminders, users never miss a session, enhancing engagement and ensuring timely lawn care.

The app promotes environmental sustainability by optimizing lawn care practices and conserving resources. However,  it raises social implications regarding job displacement for traditional lawn care workers, requiring considerations for retraining or alternative employment opportunities.  Ethical considerations also include data privacy, transparent use of customer information, and responsible AI decision-making. Moreover  users enjoy the convenience and time-saving benefits, allowing them to focus on other activities. Lastly,  the app's automation of lawn care tasks reduces human labor, potentially reallocating resources to address other societal needs.

Lawn Buddy utilizes advanced  object recognition technology to accurately identify lawn boundaries and obstacles, such as trees and fences. By analyzing images captured, the app evaluates the reliability of object recognition under various lighting conditions and complex lawn shapes.  Exploring advanced techniques like machine learning and deep neural networks pushes technological boundaries to enhance precision and efficiency.  Overall, the app's use of object recognition improves lawn measurements, ensuring optimal scheduling and mowing coverage.

User devices, such as smartphones and tablets, serve as the primary interface for scheduling mowing sessions. The built-in cameras on these devices capture lawn images for object recognition and measurement.  IPUs also help in accelerating image processing tasks, while CNN models detect and segment objects within the lawn images.

Amazon EC2 Cloud Computing offers scalable compute capacity for hosting backend services, handling user requests, AI model training, and business logic.   Amazon S3 Cloud Storage provides secure storage for user data, including lawn images and schedules.  Amazon SageMaker enables AI model training and deployment at scale, while  Amazon Redshift allows for data analytics and insights from large datasets.

JavaScript is the primary language for React Native app development, supported by Node.js for server-side development and npm for package management.  React Native, along with Expo, provides tools and services for building and deploying cross-platform mobile apps. Additional libraries like Axios and Formik enhance functionality by enabling API requests and form management.

TensorFlow.js enables training and deploying machine learning models directly in the browser or on the device, while MobileNet offers a pre-trained deep learning model for image classification, aiding object recognition in lawn images. OpenCV.js provides computer vision functionalities for image processing and analysis. Also,  weather data APIs integrate weather conditions into mowing schedules.   Lastly, Visual Studio Code is a lightweight IDE widely used for web and mobile app development, including React Native.

User data in Lawn Buddy includes user profiles with contact information and preferences, lawn measurements provided manually or through object recognition algorithms, and scheduling data containing session details.  Users input their profile information, lawn measurements, and scheduling preferences directly in the app, while object recognition algorithms capture lawn images through the app's camera. This data collection ensures accurate scheduling and efficient management of the mowing service.

In data processing, images are processed for object recognition, detecting objects like trees or fences. User input for scheduling preferences also undergoes validation to ensure consistency and adherence to specified constraints. Also, weather data from external APIs is retrieved and processed to determine optimal mowing schedules.  User data, lawn images, and information about scheduled and completed sessions are stored in Amazon S3 for efficient retrieval. Additionally, analytics data regarding app usage and performance are collected and stored for analysis and improvement purposes.

Object recognition in Lawn Buddy is facilitated by MobileNet utilizing TensorFlow  Then, the training process involves preparing a labeled dataset of lawn images with various objects, training the MobileNet model using Amazon SageMaker and TensorFlow, and iterating to improve accuracy by adjusting the model's internal parameters. This ensures efficient and accurate object recognition for effective lawn analysis.

The image processing algorithm in Lawn Buddy also employs OpenCV. By utilizing the Canny edge detection algorithm, it identifies lawn boundaries and object edges within the lawn images.  This precise detection enables accurate lawn measurement and obstacle detection, contributing to the app's overall functionality and efficiency.

Lastly, the machine learning algorithm in Lawn Buddy utilizes regression models to predict optimal mowing schedules. The training process involves collecting a dataset of historical mowing schedules, lawn sizes, and weather conditions. The dataset is then preprocessed. Machine learning algorithms are then employed to train the model on the prepared dataset, optimizing its parameters to improve performance and accuracy.  Thank you for watching!

